html,
body {
  width: 100%;
  height: 100%;
  line-height: 1;
}
::selection {
  color: var(--color-casting-sea);
  background-color: var(--color-pale-red);
}
html {
  font-size: 16px;
  font-family: var(--font-family-Monarch);
  overflow: hidden;
}

.loader{
  $starFieldWidth: 2560;
  $starFieldHeight: 2560;
  $starStartOffset: 600px;

  $starOneScrollDuration: 100s;
  $starTwoScrollDuration: 125s;
  $starThreeScrollDuration: 175s;
  $numStarOneStars: 1700;
  $numStarTwoStars: 700;
  $numStarThreeStars: 200;
  $numShootingStars: 10;
  $width: 100%;


  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100svh;
  background-color: var(--color-firefly);
  font-size: css-clamp(30px, 40px);
  color: var(--color-white);
  
  &:not(&.loading){
    opacity: 0;
    transition: opacity 0.5s linear;
    pointer-events: none;
  }
  .container {
    display: block;
    position: relative;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, #020107 0%, #201b46 100%);
    .text {
      z-index: 2;
      position: absolute;
      top: 50%;
      left: 50%;
      color: var(--color-white);
      transform: translate(-50%, -50%);
      font-size: 20px;
      font-family: var(--font-family-monarch);

      .planet {
        width: 200px;
        height: 200px;
        animation: spinner 2.5s ease infinite;
        z-index: 1;
        &-logo {
          transition: 1s all;
          width: 200px;
          height: 200px;
          animation: spinner 2.5s ease;
        }
      }

      @keyframes spinner {
        to {transform: rotate(360deg);}
      }
    }
  }
  @function create-stars($n) {
    $stars: "#{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";
  
    @for $i from 2 through $n {
      $stars: "#{$stars} , #{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";
    }
  
    @return unquote($stars);
  }
  @mixin star-template($numStars, $starSize, $scrollSpeed) {
    z-index: 1;
    width: $starSize;
    height: $starSize;
    border-radius: 50%;
    background: transparent;
    box-shadow: create-stars($numStars);
    animation: animStar $scrollSpeed linear infinite;
    &:after {
      content: " ";
      top: -$starStartOffset;
      width: $starSize;
      height: $starSize;
      border-radius: 50%;
      position: absolute;
      backgroud: transparent;
      box-shadow: create-stars($numStars);
    }
  }
  @mixin shooting-star-template($numStars, $starSize, $speed) {
    z-index: 1;
    width: $starSize;
    height: $starSize + 80px;
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
    position: absolute;
    bottom: 0;
    right: 0;
    background: linear-gradient(to top, rgba(255,255,255,0), rgba(255,255,255,1));
    animation: animShootingStar $speed linear infinite;
  }
  .stars {
    @include star-template($numStarOneStars, 1px, $starOneScrollDuration);
  }
  .stars1 {
    @include star-template($numStarTwoStars, 2px, $starTwoScrollDuration);
  }
  .stars2 {
    @include star-template($numStarThreeStars, 3px, $starThreeScrollDuration);
  }
  .shooting-stars {
    @include shooting-star-template($numShootingStars, 5px, 10s);
  }
  @keyframes animStar {
    from {
      transform: translateY(0px);
    }
    to {
      transform: translateY(-#{$starFieldHeight}px) translateX(-#{$starFieldWidth}px);
    }
  }
  
  
  @keyframes animShootingStar {
    from {
      transform: translateY(0px) translateX(0px) rotate(-45deg);
      opacity: 1;
      height: 5px;
    }
    to {
      transform: translateY(-#{$starFieldHeight}px) translateX(-#{$starFieldWidth}px) rotate(-45deg);
      opacity: 1;
      height: 800px;
    }
  };

  
    
}